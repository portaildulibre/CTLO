REM  *****  BASIC  *****
Option Explicit
Private maxwords as Integer
Private parser as Object

Sub Main
	parser = createUnoService( "org.atosorigin.ctOO.CtOO3" )
	maxwords=parser.maxwords
xray parser
	maxwords = 3
	' TODO maxwords=parser.maxwords
'	on error goto TraitementErreur
	Dim portionCursor as Object
	Dim portion as String
	Dim results as Object
	
	portionCursor=SelectPortion(maxwords)
	portion=portionCursor.string
	results=Search(portion)
	ThisComponent.currentController.select(portionCursor) ' Affiche la selection
	if (results = null) then
		msgbox "pas de resultat"
	else
		xray results
		dim i as integer
		for i=LBound(results) to UBound(results)
			xray results(i)
		next
	endif

	' TODO : pour aider au debug	
	ThisComponent.currentController.select(portionCursor) ' Affiche la selection
	Exit sub
TraitementErreur:
	print "Erreur " & erl,erreur
	resume next
End Sub

' Selection d'une portion limité à n mots avant et après la selection, 
' bornée au paragraphe courant.
Function SelectPortion(maxwords as integer) as Object
	Dim theText as Object
	Dim portionCursor as Object 
	Dim startWordCursor as Object
	Dim endWordCursor as Object
	Dim paragraphCursor as Object
	Dim i as integer
	'theDocument=StarDesktop.CurrentComponent
	theText=ThisComponent.text
	startWordCursor=theText.createTextCursorByRange(ThisComponent.currentController.viewCursor)
	endWordCursor=theText.createTextCursorByRange(ThisComponent.currentController.viewCursor)
	paragraphCursor=theText.createTextCursorByRange(ThisComponent.currentController.viewCursor)
	portionCursor=theText.createTextCursorByRange(ThisComponent.currentController.viewCursor)
	
	paragraphCursor.gotoStartOfParagraph(false)
	paragraphCursor.gotoEndOfParagraph(true)
	
	startWordCursor.gotoStartOfWord(false)
	for i=1 to maxwords
		startWordCursor.gotoPreviousWord(false)
	next
	for i=1 to maxwords-1
		endWordCursor.gotoNextWord(true)	
	next
	endWordCursor.gotoEndOfWord(false)
	
	portionCursor=theText.createTextCursor()
	if (theText.compareRegionStarts(startWordCursor,paragraphCursor) < 0) then
		portionCursor.gotoRange(startWordCursor.start,false)
	else
		portionCursor.gotoRange(paragraphCursor.start,false)
	end if
	if (theText.compareRegionEnds(endWordCursor,paragraphCursor) > 0) then
		portionCursor.gotoRange(endWordCursor.end,true)
	else
		portionCursor.gotoRange(paragraphCursor.end,true)
	end if
	SelectPortion=portionCursor
End Function

' Recherche, via le code Java, les anglicismes
Function Search(portion as string) as Object
	Dim rc as Object ' Array of Result
	' TODO : recupération du singleton
	Search=parser.search(portion)
End Function

' Pour tous le text, paragraphe par paragraphe
' TODO: gérer equalement les tableaux, et autres textes
Sub forAllParagraph()
	Dim listParagraph as Object
	listParagraph = theDocument.text.createEnumeration()
	do while listParagraph.hasMoreElements
		elementText = listParagraph.nextElement
		if (elementText.supportsService("com.sun.star.text.Paragraph")) then
			' ici elementText est le paragraphe
		end if
	loop
End sub